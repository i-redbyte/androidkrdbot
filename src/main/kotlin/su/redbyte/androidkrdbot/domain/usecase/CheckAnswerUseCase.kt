package su.redbyte.androidkrdbot.domain.usecase

import com.github.kotlintelegrambot.Bot
import com.github.kotlintelegrambot.types.TelegramBotResult
import kotlinx.coroutines.delay
import su.redbyte.androidkrdbot.data.repository.VerificationRepository
import su.redbyte.androidkrdbot.utils.candidateName
import su.redbyte.androidkrdbot.utils.deleteMessagesFromBot
import su.redbyte.androidkrdbot.utils.deleteMessagesFromUser
import su.redbyte.androidkrdbot.utils.sendAndCacheMessage

class CheckAnswerUseCase(
    private val verificationRepository: VerificationRepository
) {
    operator suspend fun invoke(
        userId: Long,
        answer: String,
        bot: Bot
    ) {
        val verification = verificationRepository.get(userId) ?: return
        val chatId = verification.chatId
        val user = verification.user

        verificationRepository.remove(userId)

        if (verification.question.isCorrect(answer)) {
            bot.sendAndCacheMessage(chatId, "${user.candidateName()} —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à—ë–ª –ø—Ä–æ–≤–µ—Ä–∫—É! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å.")
            println("‚úÖ ${user.candidateName()} –ø—Ä–æ—à—ë–ª –ø—Ä–æ–≤–µ—Ä–∫—É")
        } else {
            when (val result = bot.getChatMember(chatId, userId)) {
                is TelegramBotResult.Success -> {
                    val status = result.value.status
                    println("üëÅÔ∏è [ANSWER] –°—Ç–∞—Ç—É—Å ${user.firstName}: $status")

                    if (status != "left" && status != "kicked") {
                        bot.banChatMember(chatId, userId)
                        bot.unbanChatMember(chatId, userId)
                        deleteMessagesFromUser(bot, chatId, userId)
                        bot.sendAndCacheMessage(chatId, "–¢–æ–≤–∞—Ä–∏—â ${user.candidateName()} –¥–∞–ª –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –∏ –±—ã–ª —É–¥–∞–ª—ë–Ω.")
                        println("‚úÖ ${user.firstName} —É–¥–∞–ª—ë–Ω –∑–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç")
                        delay(5_000)
                        deleteMessagesFromBot(bot, chatId)
                    } else {
                        println("üëª ${user.firstName} —É–∂–µ –Ω–µ –≤ —á–∞—Ç–µ")
                    }
                }

                is TelegramBotResult.Error -> {
                    println("‚ùå [ANSWER] –û—à–∏–±–∫–∞ –ø—Ä–∏ getChatMember:")
                }
            }
        }
    }
}

